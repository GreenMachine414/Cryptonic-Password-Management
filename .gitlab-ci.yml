stages:
    - test
    - deploy

test:
    image: python:3.8.12
    stage: test
    tags:
        - python
    script:
        - .gitlab/test_install.sh
        - coverage run --source='.' manage.py test
        - coverage report

    coverage: '/TOTAL.*\s+(\d+%)$/'


staging-a:
    stage: deploy
    image: ruby:latest
    tags:
        - ruby
    rules:
        - if: $GILAB_USER_ID == $GITLAB_USER_ID_A
    script:
        - .gitlab/dpl_before.sh
        - dpl --provider=heroku --app=$(HEROKU_APP_STAGING)-a --api-key=$HEROKU_API_KEY_A


staging-b:
    stage: deploy
    image: ruby:latest
    tags:
        - ruby
    rules:
        - if: $GILAB_USER_ID == $GITLAB_USER_ID_B
    script:
        - .gitlab/dpl_before.sh
        - dpl --provider=heroku --app=$(HEROKU_APP_STAGING)-b --api-key=$HEROKU_API_KEY_B


staging-c:
    stage: deploy
    image: ruby:latest
    tags:
        - ruby
    rules:
        - if: $GILAB_USER_ID == $GITLAB_USER_ID_C
    script:
        - .gitlab/dpl_before.sh
        - dpl --provider=heroku --app=$(HEROKU_APP_STAGING)-c --api-key=$HEROKU_API_KEY_C


staging-d:
    stage: deploy
    image: ruby:latest
    tags:
        - ruby
    rules:
        - if: $GILAB_USER_ID == $GITLAB_USER_ID_D
    script:
        - .gitlab/dpl_before.sh
        - dpl --provider=heroku --app=$(HEROKU_APP_STAGING)-d --api-key=$HEROKU_API_KEY_D


production:
    stage: deploy
    image: ruby:latest
    tags:
        - ruby
    before_script:
        - .gitlab/dpl_before.sh
    script:
        - dpl --provider=heroku --app=$HEROKU_APP_DEPLOY --api-key=$HEROKU_API_KEY_A
    only:
        - merge_requests
    except:
        variables:
            - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "main"
